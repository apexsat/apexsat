<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="volt_code_test_8c" kind="file" language="C++">
    <compoundname>voltCodeTest.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="no">math.h</includes>
    <incdepgraph>
      <node id="1">
        <label>voltCodeTest.c</label>
        <link refid="volt_code_test_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>math.h</label>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="2">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="volt_code_test_8c_1a7618c2ceae4b062cf1a9ead8116c5aae" prot="public" static="no">
        <name>LTC2620_VOLTAGE_REFERENCE</name>
        <initializer>4.096</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="voltCodeTest.c" line="28" column="9" bodyfile="voltCodeTest.c" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="volt_code_test_8c_1a63f1c439f69b1a2b1af3ac4a9c953b43" prot="public" static="no">
        <name>LTC2620_RESOLUTION</name>
        <initializer>12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="voltCodeTest.c" line="29" column="9" bodyfile="voltCodeTest.c" bodystart="29" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="volt_code_test_8c_1a9e1974c96e206adfc1b7ca68807d5145" prot="public" static="no" strong="no">
        <type></type>
        <name>LTC2620_Command_t</name>
        <enumvalue id="volt_code_test_8c_1a9e1974c96e206adfc1b7ca68807d5145a1b2c8f6bb7058c3ca950efe77ad8c20f" prot="public">
          <name>LTC2620_COMMAND_WRITE_N</name>
          <initializer>= 0x0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="volt_code_test_8c_1a9e1974c96e206adfc1b7ca68807d5145a2281dbce60c445e42165e2aa7e2ba18e" prot="public">
          <name>LTC2620_COMMAND_UPDATE_N</name>
          <initializer>= 0x1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="volt_code_test_8c_1a9e1974c96e206adfc1b7ca68807d5145aff2fff9e1a573dee5fa62d4ca0513ab3" prot="public">
          <name>LTC2620_COMMAND_WRITE_N_UPDATE_ALL</name>
          <initializer>= 0x2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="volt_code_test_8c_1a9e1974c96e206adfc1b7ca68807d5145af5175695e41a1e07970990b690029d9a" prot="public">
          <name>LTC2620_COMMAND_WRITE_N_UPDATE_N</name>
          <initializer>= 0x3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="volt_code_test_8c_1a9e1974c96e206adfc1b7ca68807d5145a8d31268ff882632fca395d003ccfb59b" prot="public">
          <name>LTC2620_COMMAND_POWER_DOWN_N</name>
          <initializer>= 0x4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="volt_code_test_8c_1a9e1974c96e206adfc1b7ca68807d5145a63066bc09d302bc51fdf6e888d61572a" prot="public">
          <name>LTC2620_COMMAND_NOTHING</name>
          <initializer>= 0xF</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="voltCodeTest.c" line="5" column="1" bodyfile="voltCodeTest.c" bodystart="6" bodyend="13"/>
      </memberdef>
      <memberdef kind="enum" id="volt_code_test_8c_1af3f99c1003c353a51338a3bc48367a55" prot="public" static="no" strong="no">
        <type></type>
        <name>LTC2620_Channel_t</name>
        <enumvalue id="volt_code_test_8c_1af3f99c1003c353a51338a3bc48367a55a3bd994903723e039b21f685ea61ed861" prot="public">
          <name>LTC2620_CHANNEL_A</name>
          <initializer>= 0x0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="volt_code_test_8c_1af3f99c1003c353a51338a3bc48367a55a99b1b7a544c560aee4147830822d1c89" prot="public">
          <name>LTC2620_CHANNEL_B</name>
          <initializer>= 0x1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="volt_code_test_8c_1af3f99c1003c353a51338a3bc48367a55a54f4117428ab054b27cad99ef2725ab0" prot="public">
          <name>LTC2620_CHANNEL_C</name>
          <initializer>= 0x2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="volt_code_test_8c_1af3f99c1003c353a51338a3bc48367a55a7167b02791d1799b7cdbb9b7361c7a02" prot="public">
          <name>LTC2620_CHANNEL_D</name>
          <initializer>= 0x3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="volt_code_test_8c_1af3f99c1003c353a51338a3bc48367a55af2193e18eaa8fde21fae7f241e0f81c4" prot="public">
          <name>LTC2620_CHANNEL_E</name>
          <initializer>= 0x4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="volt_code_test_8c_1af3f99c1003c353a51338a3bc48367a55a378f66ff7fc950c42400344bd9a2c1f3" prot="public">
          <name>LTC2620_CHANNEL_F</name>
          <initializer>= 0x5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="volt_code_test_8c_1af3f99c1003c353a51338a3bc48367a55a0c4c7499dea28f28c8d63a9cac56ed01" prot="public">
          <name>LTC2620_CHANNEL_G</name>
          <initializer>= 0x6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="volt_code_test_8c_1af3f99c1003c353a51338a3bc48367a55a1749bdf4b64b1287ae8130a9b31c5427" prot="public">
          <name>LTC2620_CHANNEL_H</name>
          <initializer>= 0x7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="volt_code_test_8c_1af3f99c1003c353a51338a3bc48367a55a06a0d03752eafda6eb88b1c0e45628bc" prot="public">
          <name>LTC2620_CHANNEL_ALL</name>
          <initializer>= 0xF</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="voltCodeTest.c" line="15" column="1" bodyfile="voltCodeTest.c" bodystart="16" bodyend="26"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="volt_code_test_8c_1a33ba80ca45e49cb28cb461584bd2e765" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t voltCodeConvert</definition>
        <argsstring>(float volt)</argsstring>
        <name>voltCodeConvert</name>
        <param>
          <type>float</type>
          <declname>volt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="voltCodeTest.c" line="31" column="10" bodyfile="voltCodeTest.c" bodystart="31" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="volt_code_test_8c_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="voltCodeTest.c" line="38" column="5" bodyfile="voltCodeTest.c" bodystart="38" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="volt_code_test_8c_1ad3ad93b488bf7050cbed31ddc14ae088" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void print_binary</definition>
        <argsstring>(int value)</argsstring>
        <name>print_binary</name>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="voltCodeTest.c" line="51" column="6" bodyfile="voltCodeTest.c" bodystart="51" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="volt_code_test_8c_1a2fd40805a7ab42b69a1ba3766efdd52f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setVoltage</definition>
        <argsstring>(uint8_t *commandBuffer, uint16_t code)</argsstring>
        <name>setVoltage</name>
        <param>
          <type>uint8_t *</type>
          <declname>commandBuffer</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="voltCodeTest.c" line="62" column="6" bodyfile="voltCodeTest.c" bodystart="62" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="volt_code_test_8c_1a18b1665d61d8f99558779979427be580" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setCommand</definition>
        <argsstring>(uint8_t *commandBuffer, LTC2620_Command_t command)</argsstring>
        <name>setCommand</name>
        <param>
          <type>uint8_t *</type>
          <declname>commandBuffer</declname>
        </param>
        <param>
          <type>LTC2620_Command_t</type>
          <declname>command</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="voltCodeTest.c" line="67" column="6" bodyfile="voltCodeTest.c" bodystart="67" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="volt_code_test_8c_1a0e149be1059f888b8777ce4ce7762dfd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setChannel</definition>
        <argsstring>(uint8_t *commandBuffer, LTC2620_Channel_t channel)</argsstring>
        <name>setChannel</name>
        <param>
          <type>uint8_t *</type>
          <declname>commandBuffer</declname>
        </param>
        <param>
          <type>LTC2620_Channel_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="voltCodeTest.c" line="71" column="6" bodyfile="voltCodeTest.c" bodystart="71" bodyend="73"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>LTC2620_COMMAND_WRITE_N<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0,</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>LTC2620_COMMAND_UPDATE_N<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x1,</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>LTC2620_COMMAND_WRITE_N_UPDATE_ALL<sp/><sp/>=<sp/>0x2,</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>LTC2620_COMMAND_WRITE_N_UPDATE_N<sp/><sp/><sp/><sp/>=<sp/>0x3,</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>LTC2620_COMMAND_POWER_DOWN_N<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x4,</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>LTC2620_COMMAND_NOTHING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0xF,</highlight></codeline>
<codeline lineno="13"><highlight class="normal">}<sp/>LTC2620_Command_t;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>LTC2620_CHANNEL_A<sp/><sp/><sp/>=<sp/>0x0,</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>LTC2620_CHANNEL_B<sp/><sp/><sp/>=<sp/>0x1,</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>LTC2620_CHANNEL_C<sp/><sp/><sp/>=<sp/>0x2,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>LTC2620_CHANNEL_D<sp/><sp/><sp/>=<sp/>0x3,</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>LTC2620_CHANNEL_E<sp/><sp/><sp/>=<sp/>0x4,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>LTC2620_CHANNEL_F<sp/><sp/><sp/>=<sp/>0x5,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>LTC2620_CHANNEL_G<sp/><sp/><sp/>=<sp/>0x6,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>LTC2620_CHANNEL_H<sp/><sp/><sp/>=<sp/>0x7,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>LTC2620_CHANNEL_ALL<sp/>=<sp/>0xF,</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}<sp/>LTC2620_Channel_t;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LTC2620_VOLTAGE_REFERENCE<sp/><sp/>4.096</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LTC2620_RESOLUTION<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal">uint16_t<sp/>voltCodeConvert(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>volt)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>code<sp/>=<sp/>floor((volt<sp/>*<sp/>pow(2,<sp/>12))<sp/>/<sp/>4.096);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>code;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main()<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>commandBuffer[3];</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>code<sp/>=<sp/>voltCodeConvert(3.512);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>setVoltage(commandBuffer,<sp/>code);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>setCommand(commandBuffer,<sp/>LTC2620_COMMAND_WRITE_N_UPDATE_N);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>setChannel(commandBuffer,<sp/>LTC2620_CHANNEL_G);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>printBinary()</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>0;</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>print_binary(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>mask<sp/>=<sp/>~(~0u<sp/>&gt;&gt;<sp/>1);<sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>highest<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>iterate<sp/>over<sp/>all<sp/>bits:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(value)<sp/>*<sp/>CHAR_BIT;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>putchar(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>+<sp/>!!(value<sp/>&amp;<sp/>mask));<sp/><sp/></highlight><highlight class="comment">//<sp/>!!<sp/>converts<sp/>to<sp/>bool<sp/>0<sp/>or<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>&gt;&gt;=<sp/>1;<sp/><sp/></highlight><highlight class="comment">//<sp/>shift<sp/>to<sp/>next<sp/>lower<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setVoltage(uint8_t<sp/>*commandBuffer,<sp/>uint16_t<sp/>code)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>commandBuffer[1]<sp/>=<sp/>(uint8_t)((code<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>commandBuffer[2]<sp/>=<sp/>(uint8_t)(code<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setCommand(uint8_t<sp/>*commandBuffer,<sp/>LTC2620_Command_t<sp/>command)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>commandBuffer[0]<sp/>=<sp/>(commandBuffer[0]<sp/>&amp;<sp/>0x0F)<sp/>|<sp/>((command<sp/>&amp;<sp/>0x0F)<sp/>&lt;&lt;<sp/>4);</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setChannel(uint8_t<sp/>*commandBuffer,<sp/>LTC2620_Channel_t<sp/>channel)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>commandBuffer[0]<sp/>=<sp/>(commandBuffer[0]<sp/>&amp;<sp/>0xF0)<sp/>|<sp/>(channel<sp/>&amp;<sp/>0x0F);</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="voltCodeTest.c"/>
  </compounddef>
</doxygen>
